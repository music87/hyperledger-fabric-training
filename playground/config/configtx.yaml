# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

---
################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations: # 定義有哪些組織, eg. order, peer, 及其權限, 至於每種組織各自的數量則不在此檔案中定義, 除了 OrdererEndpoints 與 order 共識決策(Solo, Raft, etc.)的 Consenters 那邊會寫明是第幾台 order 做哪些事情

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &OrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: OrdererOrg

        # ID to load the MSP definition as
        ID: OrdererMSP # 此 ID 必須在此區塊鏈中是唯一的

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: ../crypto-config/ordererOrganizations/cathaybc.com/msp # 放 order 組織的憑證在創世區塊的定義裡, 往後就會查看每個 order/peer 所持有的憑證是否是透過該組織的 RCA 所發放, 來確認可否將之加進 channel 裡面

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers: # 這份創始區塊文件在 fabric channel 裡面也會不斷被更新, 因此 order 有權利將此文件拉出來看
                Type: Signature
                Rule: "OR('OrdererMSP.member')" # member 包含了所有角色 admin, peer, orderer, client
            Writers: # 修改自己的文件的權利
                Type: Signature
                Rule: "OR('OrdererMSP.member')"
            Admins: # 修改別人的文件的權利
                Type: Signature
                Rule: "OR('OrdererMSP.admin')"

        OrdererEndpoints: # 有幾台 order 節點就要在這邊寫明
            - orderer1.cathaybc.com:7050

    - &Org1
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: Org1MSP

        # ID to load the MSP definition as
        ID: Org1MSP # 此 ID 必須在此區塊鏈中是唯一的

        MSPDir: ../crypto-config/peerOrganizations/org1.cathaybc.com/msp # 放 peer 組織的憑證

        # Policies defines the set of policies at this level of the config tree
        # For organization policies, their canonical path is usually
        #   /Channel/<Application|Orderer>/<OrgName>/<PolicyName>
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('Org1MSP.admin', 'Org1MSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('Org1MSP.admin')"
            Endorsement: # endorsement 的機制只有 peer 才有, order 沒有
                Type: Signature
                Rule: "OR('Org1MSP.peer')" #網路上教學會將這邊改成 Org1MSP.admin, 非常不建議這樣做

        # leave this flag set to true.
        AnchorPeers: # 影響到 discovery 功能, 即確認這個 channel 上有幾台 peer 節點還活著 i.e. AnchorPeers 會紀錄現在組織上節點的位置, 有了該位置才能讓其他節點知道該節點是否還活著
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer1.org1.cathaybc.com
              Port: 7051

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities: # 設定相容的 fabric 區塊鏈版本有哪些
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        # V2_0 capability ensures that orderers and peers behave according
        # to v2.0 channel capabilities. Orderers and peers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 capability.
        # Prior to enabling V2.0 channel capabilities, ensure that all
        # orderers and peers on a channel are at v2.0.0 or later.
        V2_0: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        # V2_0 orderer capability ensures that orderers behave according
        # to v2.0 orderer capabilities. Orderers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 orderer capability.
        # Prior to enabling V2.0 orderer capabilities, ensure that all
        # orderers on channel are at v2.0.0 or later.
        V2_0: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        # V2_0 application capability ensures that peers behave according
        # to v2.0 application capabilities. Peers from
        # prior releases would behave in an incompatible way, and are therefore
        # not able to participate in channels at v2.0 application capability.
        # Prior to enabling V2.0 application capabilities, ensure that all
        # peers on channel are at v2.0.0 or later.
        V2_0: true

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults # 與 application channel 相關的 policy 的設定

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins: # 新增組織與刪除組織 eg. Org1 的權利
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        LifecycleEndorsement: # 牽涉到 chaincode 要如何才能夠被執行的 endorsement policy
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement" # 條件是過半的"組織 Org1"的Endorsement policy都要通過完成簽名, 才能夠 commit chaincode 到鏈上
        Endorsement: # 修改此內容需要大家的背書
            Type: ImplicitMeta
            Rule: "MAJORITY Endorsement"

    Capabilities:
        <<: *ApplicationCapabilities
################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start, ex: solo or etcdraft
    OrdererType: solo # 共識演算法

    EtcdRaft:
        Consenters: # 有幾個 order 節點就填幾個
        - Host: orderer1.cathaybc.com
          Port: 7050
          ClientTLSCert: ../crypto-config/ordererOrganizations/cathaybc.com/orderers/orderer1.cathaybc.com/tls/server.crt
          ServerTLSCert: ../crypto-config/ordererOrganizations/cathaybc.com/orderers/orderer1.cathaybc.com/tls/server.crt

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s # transaction 至少要經過多久才能被打包成 block 上鏈來完成交易

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults # 比 application channel 上層的 system channel policy
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles: # 創始區塊用, 透過指標的方式讓整體架構好看一點

    OrderersGenesis:
        <<: *ChannelDefaults
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums: # 雖然這邊是在講 OrderesGenesis, 但至少要將一個 peer 節點加進這個 system channel 裡, 如此才能做 create application channel 的動作, 這個區塊鏈才有辦法正常運作 (不太可能將 chaincode 安裝在 sys channel 上)
            SampleConsortium:
                Organizations:
                    - *Org1 # 定義有哪些 peer 節點才有權利 "create" application channel; 注意, 沒有 create channel 的權利不代表沒有加入 channel 的權利
    OrgsChannel:
        Consortium: SampleConsortium
        <<: *ChannelDefaults
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *Org1 # 定義哪些 peer 節點有 "加入" application channel 的權利
            Capabilities:
                <<: *ApplicationCapabilities
